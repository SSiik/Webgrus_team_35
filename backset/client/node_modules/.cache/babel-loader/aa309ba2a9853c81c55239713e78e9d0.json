{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC9C4\\uB610\\\\Documents\\\\GitHub\\\\Webgrus_team_35\\\\backset\\\\client\\\\src\\\\BoardForm.js\";\nimport React, { Component } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport \"jquery.cookie\";\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nclass BoardRow extends Component {\n  //boardform안에 boardrow 있음\n  render() {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: {\n        pathname: \"/board/detail\",\n        query: {\n          _id: this.props._id\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, this.props.title)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: {\n        pathname: \"/board/detail\",\n        query: {\n          _id: this.props._id\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, this.props.createdAt.substring(0, 10))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: {\n        pathname: \"/board/detail\",\n        query: {\n          _id: this.props._id\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, this.props.content.replace(/(<([^>]+)>)/ig, \"\"))));\n  }\n\n}\n\nclass BoardForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      boardList: []\n    };\n\n    this.getBoardList = () => {\n      const send_param = {\n        headers,\n        _id: $.cookie(\"login_id\")\n      };\n      axios.post(\"http://localhost:8080/board/getBoardList\", send_param).then(returnData => {\n        let boardList;\n\n        if (returnData.data.list.length > 0) {\n          console.log(returnData.data.list.length);\n          const boards = returnData.data.list;\n          boardList = boards.map(item =>\n          /*#__PURE__*/\n          //반복문을 통해 아래의 세트로 묶어줄 것\n          React.createElement(BoardRow, {\n            key: Date.now() + Math.random() * 500,\n            _id: item._id,\n            createdAt: item.createdAt,\n            title: item.title,\n            content: item.content,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }\n          })); // console.log(boardList);\n\n          this.setState({\n            boardList: boardList //빈 배열에 바로 위 코드에서 작성한 map을 넣어준다.\n\n          });\n        } else {\n          boardList = /*#__PURE__*/React.createElement(\"tr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            colSpan: \"3\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }\n          }, \"\\uAC8C\\uC2DC\\uAE00\\uC774 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"));\n          this.setState({\n            boardList: boardList\n          }); // window.location.reload();\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getBoardList();\n  }\n\n  render() {\n    const divStyle = {\n      margin: 50\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      table: true,\n      \"table-hover\": true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      class: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      width: \"325\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"\\uB2C9\\uB124\\uC784\"), /*#__PURE__*/React.createElement(\"th\", {\n      width: \"200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"\\uB0A0\\uC9DC\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"\\uAE00 \\uB0B4\\uC6A9\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, this.state.boardList))));\n  }\n\n}\n\nexport default BoardForm;","map":{"version":3,"sources":["C:/Users/진또/Documents/GitHub/Webgrus_team_35/backset/client/src/BoardForm.js"],"names":["React","Component","Table","NavLink","axios","$","defaults","withCredentials","headers","BoardRow","render","pathname","query","_id","props","title","createdAt","substring","content","replace","BoardForm","state","boardList","getBoardList","send_param","cookie","post","then","returnData","data","list","length","console","log","boards","map","item","Date","now","Math","random","setState","catch","err","componentDidMount","divStyle","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport $ from \"jquery\";\r\nimport {} from \"jquery.cookie\";\r\naxios.defaults.withCredentials = true;\r\nconst headers = { withCredentials: true };\r\n\r\nclass BoardRow extends Component {//boardform안에 boardrow 있음\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td>\r\n          <NavLink\r\n            to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\r\n          >{/* 글 타이틀을 클릭하면 위 url로 이동 */}\r\n            {this.props.title}\r\n          </NavLink>\r\n        </td>\r\n        <td>\r\n          <NavLink\r\n            to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\r\n          >\r\n            {this.props.createdAt.substring(0, 10)}{/* 작성 일자를 클릭하면 위 url로 이동 */}\r\n          </NavLink>\r\n        </td>\r\n        <td>\r\n          <NavLink\r\n            to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\r\n            >{(this.props.content).replace(/(<([^>]+)>)/ig,\"\")}\r\n         {/*본문을 불러올 시 p태그가 노출되어 자바스크립트 정규표현식을 이용해 p태그 제거함 */}\r\n          </NavLink>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nclass BoardForm extends Component {\r\n  state = {\r\n    boardList: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getBoardList();\r\n  }\r\n\r\n  getBoardList = () => {\r\n    const send_param = {\r\n      headers,\r\n      _id: $.cookie(\"login_id\")\r\n    };\r\n    axios\r\n      .post(\"http://localhost:8080/board/getBoardList\", send_param)\r\n      .then(returnData => {\r\n        let boardList;\r\n        if (returnData.data.list.length > 0) {\r\n          console.log(returnData.data.list.length);\r\n          const boards = returnData.data.list;\r\n          boardList = boards.map(item => (//반복문을 통해 아래의 세트로 묶어줄 것\r\n            <BoardRow\r\n              key={Date.now() + Math.random() * 500}\r\n              _id={item._id}\r\n              createdAt={item.createdAt}\r\n              title={item.title}\r\n              content = {item.content}\r\n            ></BoardRow>\r\n          ));\r\n          // console.log(boardList);\r\n          this.setState({\r\n            boardList: boardList//빈 배열에 바로 위 코드에서 작성한 map을 넣어준다.\r\n          });\r\n        } else {\r\n          boardList = (\r\n            <tr>\r\n              <td colSpan=\"3\">게시글이 존재하지 않습니다.</td>\r\n            </tr>\r\n           \r\n          );\r\n          this.setState({\r\n            boardList: boardList\r\n          });\r\n          // window.location.reload();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const divStyle = {\r\n      margin: 50\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={divStyle}>\r\n          <Table table table-hover>\r\n            <thead class = \"thead-light\" >\r\n              <tr>\r\n                <th width = \"325\">닉네임</th>\r\n                <th width = \"200\">날짜</th>\r\n                <th>글 내용</th>\r\n              </tr>        \r\n            </thead>\r\n            <tbody>{this.state.boardList}</tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardForm;\r\n"]},"metadata":{},"sourceType":"module"}