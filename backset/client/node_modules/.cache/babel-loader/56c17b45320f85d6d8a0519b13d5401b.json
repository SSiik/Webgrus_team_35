{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC9C4\\uB610\\\\Documents\\\\GitHub\\\\Webgrus_team_35\\\\backset\\\\client\\\\src\\\\BookingForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport 'url-search-params-polyfill';\nimport { Card, Icon, Avatar, Col, Typography, Row } from 'antd';\nimport axios from 'axios';\n/*\r\n  프론트 페이지에서 이미, 로그인햇냐 안햇냐로 동적인 페이지로,\r\n  화면을 다르게 랜더링 하는건 기본이다!!.\r\n*/\n\nfunction BookingForm() {\n  const [SeatDetail, setSeatDetail] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8080/book/showSeats') //정보를 저장하는걸 한번 해보자.\n    .then(response => {\n      if (response.data.success) {\n        setSeatDetail(response.data.docs);\n      } else {\n        alert('좌석 정보를 불러오지 못하였습니다.');\n      }\n    });\n  }, []);\n  const renderCards = SeatDetail.map((seat, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, //3항 연산자 사용.\n    seat.isAvailable ? /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        backgroundColor: \"blue\"\n      },\n      onClick: function () {\n        var reserve = window.confirm('좌석을 예약하시겠습니까?');\n\n        if (reserve) {\n          var addTime1 = prompt(\"예약하실 시간을 입력해주세요. 예약은 시간단위로만 가능합니다. \\n예시) 2시간일시 2 입력\");\n          var addTime2 = parseInt(addTime1);\n          var params = new URLSearchParams();\n          params.append('seatNo', seat.seatNo);\n          params.append('userId', \"hyunsik\");\n          params.append('addTime', addTime2);\n          axios.post('http://localhost:8080/book/booking', params).then(response => {\n            if (response.data.success) {\n              alert('좌석예약이 완료되었습니다.'); //이후에 다른페이지로 redirection해줘야 할것이다.\n            } else {\n              alert('예약에 실패하였습니다.');\n            }\n          });\n        } else {\n          alert('예약을 취소하였습니다.');\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, seat.seatNo) : /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        backgroundColor: \"red\"\n      },\n      onClick: () => alert('이미 예약된 좌석입니다.'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, seat.seatNo));\n  });\n  return /*#__PURE__*/React.createElement(Row, {\n    gutter: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 1\n    }\n  }, renderCards);\n}\n\nexport default BookingForm;","map":{"version":3,"sources":["C:/Users/진또/Documents/GitHub/Webgrus_team_35/backset/client/src/BookingForm.js"],"names":["React","useEffect","useState","Card","Icon","Avatar","Col","Typography","Row","axios","BookingForm","SeatDetail","setSeatDetail","get","then","response","data","success","docs","alert","renderCards","map","seat","index","isAvailable","backgroundColor","reserve","window","confirm","addTime1","prompt","addTime2","parseInt","params","URLSearchParams","append","seatNo","post"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAO,4BAAP;AACA,SAAQC,IAAR,EAAaC,IAAb,EAAkBC,MAAlB,EAAyBC,GAAzB,EAA6BC,UAA7B,EAAwCC,GAAxC,QAAkD,MAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;;AACA,SAASC,WAAT,GAAuB;AACrB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACED,EAAAA,SAAS,CAAC,MAAM;AAChBQ,IAAAA,KAAK,CAACI,GAAN,CAAU,sCAAV,EAAoD;AAApD,KACGC,IADH,CACQC,QAAQ,IAAI;AAChB,UAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAAyB;AACrBL,QAAAA,aAAa,CAACG,QAAQ,CAACC,IAAT,CAAcE,IAAf,CAAb;AACH,OAFD,MAEM;AACFC,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACH;AACF,KAPH;AAQH,GATY,EASV,EATU,CAAT;AAWJ,QAAMC,WAAW,GAAET,UAAU,CAACU,GAAX,CAAe,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC9C,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AACFD,IAAAA,IAAI,CAACE,WAAL,gBACA;AAAQ,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAC;AAAjB,OAAf;AAAyC,MAAA,OAAO,EAAE,YAAU;AAC1D,YAAIC,OAAO,GAAGC,MAAM,CAACC,OAAP,CAAe,eAAf,CAAd;;AACA,YAAIF,OAAJ,EAAa;AACX,cAAIG,QAAQ,GAAGC,MAAM,CAAC,qDAAD,CAArB;AACA,cAAIC,QAAQ,GAAGC,QAAQ,CAACH,QAAD,CAAvB;AAEA,cAAII,MAAM,GAAG,IAAIC,eAAJ,EAAb;AACAD,UAAAA,MAAM,CAACE,MAAP,CAAc,QAAd,EAAwBb,IAAI,CAACc,MAA7B;AACAH,UAAAA,MAAM,CAACE,MAAP,CAAc,QAAd,EAAwB,SAAxB;AACAF,UAAAA,MAAM,CAACE,MAAP,CAAc,SAAd,EAAyBJ,QAAzB;AAEGtB,UAAAA,KAAK,CAAC4B,IAAN,CAAW,oCAAX,EAAiDJ,MAAjD,EACCnB,IADD,CACMC,QAAQ,IAAI;AAChB,gBAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAAyB;AACrBE,cAAAA,KAAK,CAAC,gBAAD,CAAL,CADqB,CAErB;AACH,aAHD,MAGM;AACFA,cAAAA,KAAK,CAAC,cAAD,CAAL;AACH;AACF,WARD;AASJ,SAlBD,MAmBK;AACFA,UAAAA,KAAK,CAAC,cAAD,CAAL;AACF;AACF,OAxBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAwBIG,IAAI,CAACc,MAxBT,CADA,gBA2BA;AAAQ,MAAA,KAAK,EAAE;AAACX,QAAAA,eAAe,EAAC;AAAjB,OAAf;AAAwC,MAAA,OAAO,EAAE,MAAIN,KAAK,CAAC,eAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8EG,IAAI,CAACc,MAAnF,CA9BF,CADJ;AAoCD,GArCkB,CAAnB;AAsCA,sBACA,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,WADH,CADA;AAKC;;AACD,eAAeV,WAAf","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport 'url-search-params-polyfill';\r\nimport {Card,Icon,Avatar,Col,Typography,Row} from 'antd';\r\nimport axios from 'axios';\r\n\r\n/*\r\n  프론트 페이지에서 이미, 로그인햇냐 안햇냐로 동적인 페이지로,\r\n  화면을 다르게 랜더링 하는건 기본이다!!.\r\n*/\r\nfunction BookingForm() {         \r\n  const [SeatDetail, setSeatDetail] = useState([])\r\n    useEffect(() => {\r\n    axios.get('http://localhost:8080/book/showSeats')   //정보를 저장하는걸 한번 해보자.\r\n      .then(response => {  \r\n        if(response.data.success){\r\n            setSeatDetail(response.data.docs)\r\n        } else{\r\n            alert('좌석 정보를 불러오지 못하였습니다.')\r\n        }\r\n      })\r\n}, [])\r\n  \r\nconst renderCards= SeatDetail.map((seat,index)=>{\r\n  return(\r\n      <div>\r\n        {\r\n          //3항 연산자 사용.\r\n        seat.isAvailable?\r\n        <button style={{backgroundColor:\"blue\"}} onClick={function(){\r\n          var reserve = window.confirm('좌석을 예약하시겠습니까?');\r\n          if (reserve) {\r\n            var addTime1 = prompt(\"예약하실 시간을 입력해주세요. 예약은 시간단위로만 가능합니다. \\n예시) 2시간일시 2 입력\");\r\n            var addTime2 = parseInt(addTime1);\r\n            \r\n            var params = new URLSearchParams();\r\n            params.append('seatNo', seat.seatNo);\r\n            params.append('userId', \"hyunsik\");\r\n            params.append('addTime', addTime2);\r\n            \r\n               axios.post('http://localhost:8080/book/booking', params)   \r\n               .then(response => {  \r\n                 if(response.data.success){\r\n                     alert('좌석예약이 완료되었습니다.')\r\n                     //이후에 다른페이지로 redirection해줘야 할것이다.\r\n                 } else{\r\n                     alert('예약에 실패하였습니다.')\r\n                 }\r\n               }) \r\n          }\r\n          else {\r\n             alert('예약을 취소하였습니다.')\r\n          }\r\n        }}>{seat.seatNo}</button>\r\n        :\r\n        <button style={{backgroundColor:\"red\"}} onClick={()=>alert('이미 예약된 좌석입니다.')}>{seat.seatNo}</button>\r\n        }\r\n      </div>\r\n  )\r\n\r\n})\r\nreturn (\r\n<Row gutter={6}>\r\n  {renderCards}               \r\n</Row>\r\n)\r\n}\r\nexport default BookingForm;\r\n"]},"metadata":{},"sourceType":"module"}